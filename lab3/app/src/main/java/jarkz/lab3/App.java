/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jarkz.lab3;

import jarkz.lab3.entities.Abiturient;
import jarkz.lab3.utils.Filterer;
import jarkz.lab3.utils.LoaderFromFile;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class App {

	private static final Logger LOGGER = LogManager.getLogger(App.class);

    public static void main(String[] args) {
		LoaderFromFile loader = new LoaderFromFile();
		List<Abiturient> list = loader.loadFromFile("data.txt");
		for (Abiturient abiturient : list){
			LOGGER.info("Loaded abiturent: " + abiturient.toString());
		}

		int averageBadGrade = 5;
		LOGGER.info("Already setted bad average grade: " + averageBadGrade);
		List<Abiturient> badGradeAbiturients = Filterer.filterByAvgBadGrade(averageBadGrade, list);
		LOGGER.info("Abiturents who have bad grades: " + badGradeAbiturients.toString());
		LOGGER.info("Total abiturenst: " + badGradeAbiturients.size());

		int minimalGradeSum = 50;
		LOGGER.info("Abiturents who have grade equals or upper than " + minimalGradeSum + ":");
		List<Abiturient> filteredAbiturents = Filterer.filterByGradeSum(minimalGradeSum, list);
		LOGGER.info(filteredAbiturents.toString());
		LOGGER.info("Total abiturents: " + filteredAbiturents.size());
		filteredAbiturents.forEach(fa -> LOGGER.info("Grade of " + fa.getFirstName() + " are " + fa.getGrades().getGradeSum()));

		int count = 2;
		LOGGER.info("Already setted count of best abiturients: " + count);
		List<Abiturient> bestAbiturients = Filterer.sortByGradesAndGet(count, list);
		LOGGER.info("Best abiturients: " + bestAbiturients.toString());
		LOGGER.info("Total abiturents: " + bestAbiturients.size());
		bestAbiturients.forEach(ba -> LOGGER.info("Grade of " + ba.getFirstName() + " are " + ba.getGrades().getGradeSum()));

		int halfEntryGradeSum = 50;
		LOGGER.info("Already setted half entry grade sum: " + halfEntryGradeSum);
		List<Abiturient> abiturientsWhoPassedHalfEntryGradeSum = Filterer.sortByGradesAndGetWithMinimalGradeSum(halfEntryGradeSum, list);
		LOGGER.info("Abiturients that passed half entry grade sum: " + abiturientsWhoPassedHalfEntryGradeSum.toString());
		LOGGER.info("Total abiturents: " + abiturientsWhoPassedHalfEntryGradeSum.size());
		abiturientsWhoPassedHalfEntryGradeSum.forEach(a -> LOGGER.info("Grade of " + a.getFirstName() + " are " + a.getGrades().getGradeSum()));
    }
}
